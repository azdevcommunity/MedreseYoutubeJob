// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YoutubeApiSynchronize.Context;

#nullable disable

namespace YoutubeApiSynchronize.Migrations
{
    [DbContext(typeof(MedreseDbContext))]
    [Migration("20250328132742__mig_3")]
    partial class _mig_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("esm")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("YoutubeApiSynchronize.Entity.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PlaylistId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("playlist_id");

                    b.Property<DateTimeOffset?>("PublishedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published_at");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<long>("VideoCount")
                        .HasColumnType("bigint")
                        .HasColumnName("video_count");

                    b.HasKey("Id");

                    b.ToTable("playlists", "esm");
                });

            modelBuilder.Entity("YoutubeApiSynchronize.Entity.PlaylistVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PlaylistId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("playlist_id");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("video_id");

                    b.HasKey("Id");

                    b.ToTable("playlist_videos", "esm");
                });

            modelBuilder.Entity("YoutubeApiSynchronize.Entity.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsPrivate")
                        .HasColumnType("boolean")
                        .HasColumnName("is_private");

                    b.Property<bool?>("IsShort")
                        .HasColumnType("boolean")
                        .HasColumnName("is_short");

                    b.Property<DateTimeOffset?>("PublishedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published_at");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("video_id");

                    b.HasKey("Id");

                    b.ToTable("videos", "esm");
                });
#pragma warning restore 612, 618
        }
    }
}
